// Code generated by goctl. DO NOT EDIT!
// Source: route.proto

package route

import (
	"context"

	"HIMGo/service/route/routeClient"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	MessagePushReply = routeClient.MessagePushReply
	MessagePushReq   = routeClient.MessagePushReq

	Route interface {
		GatePushMsg(ctx context.Context, in *MessagePushReq, opts ...grpc.CallOption) (*MessagePushReply, error)
	}

	defaultRoute struct {
		cli zrpc.Client
	}
)

func NewRoute(cli zrpc.Client) Route {
	return &defaultRoute{
		cli: cli,
	}
}

func (m *defaultRoute) GatePushMsg(ctx context.Context, in *MessagePushReq, opts ...grpc.CallOption) (*MessagePushReply, error) {
	client := routeClient.NewRouteClient(m.cli.Conn())
	return client.GatePushMsg(ctx, in, opts...)
}
