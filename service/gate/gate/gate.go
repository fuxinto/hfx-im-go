// Code generated by goctl. DO NOT EDIT!
// Source: gate.proto

package gate

import (
	"context"

	"HIMGo/service/gate/gateClient"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	MessagePushReply = gateClient.MessagePushReply
	MessagePushReq   = gateClient.MessagePushReq

	Gate interface {
		RoutePushMsg(ctx context.Context, in *MessagePushReq, opts ...grpc.CallOption) (*MessagePushReply, error)
	}

	defaultGate struct {
		cli zrpc.Client
	}
)

func NewGate(cli zrpc.Client) Gate {
	return &defaultGate{
		cli: cli,
	}
}

func (m *defaultGate) RoutePushMsg(ctx context.Context, in *MessagePushReq, opts ...grpc.CallOption) (*MessagePushReply, error) {
	client := gateClient.NewGateClient(m.cli.Conn())
	return client.RoutePushMsg(ctx, in, opts...)
}
