// Code generated by goctl. DO NOT EDIT!
// Source: gate.proto

package server

import (
	"context"

	"HIMGo/service/gate/gateClient"
	"HIMGo/service/gate/internal/logic"
	"HIMGo/service/gate/internal/svc"
)

type GateServer struct {
	svcCtx *svc.ServiceContext
	gateClient.UnimplementedGateServer
}

func NewGateServer(svcCtx *svc.ServiceContext) *GateServer {
	return &GateServer{
		svcCtx: svcCtx,
	}
}

func (s *GateServer) RoutePushMsg(ctx context.Context, in *gateClient.MessagePushReq) (*gateClient.MessagePushReply, error) {
	l := logic.NewRoutePushMsgLogic(ctx, s.svcCtx)
	return l.RoutePushMsg(in)
}

func (s *GateServer) RouteMsgAck(ctx context.Context, in *gateClient.MessageAckReq) (*gateClient.MessageAckReply, error) {
	l := logic.NewRouteMsgAckLogic(ctx, s.svcCtx)
	return l.RouteMsgAck(in)
}
