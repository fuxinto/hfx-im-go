// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: him.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//消息状态
type MessageStatus int32

const (
	MessageStatus_init          MessageStatus = 0
	MessageStatus_sending       MessageStatus = 1
	MessageStatus_sendSucc      MessageStatus = 2
	MessageStatus_sendFail      MessageStatus = 3
	MessageStatus_hasDeleted    MessageStatus = 4
	MessageStatus_localImported MessageStatus = 5
	MessageStatus_localRevoked  MessageStatus = 6
)

// Enum value maps for MessageStatus.
var (
	MessageStatus_name = map[int32]string{
		0: "init",
		1: "sending",
		2: "sendSucc",
		3: "sendFail",
		4: "hasDeleted",
		5: "localImported",
		6: "localRevoked",
	}
	MessageStatus_value = map[string]int32{
		"init":          0,
		"sending":       1,
		"sendSucc":      2,
		"sendFail":      3,
		"hasDeleted":    4,
		"localImported": 5,
		"localRevoked":  6,
	}
)

func (x MessageStatus) Enum() *MessageStatus {
	p := new(MessageStatus)
	*p = x
	return p
}

func (x MessageStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_him_proto_enumTypes[0].Descriptor()
}

func (MessageStatus) Type() protoreflect.EnumType {
	return &file_him_proto_enumTypes[0]
}

func (x MessageStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageStatus.Descriptor instead.
func (MessageStatus) EnumDescriptor() ([]byte, []int) {
	return file_him_proto_rawDescGZIP(), []int{0}
}

type PackType int32

const (
	PackType_loginReq PackType = 0
	PackType_loginAck PackType = 1
	//消息同步当做心跳，可以避免在线情况下因为网络等原因消息未送达，不用等用户下次登录就可以重新推送消息
	PackType_msgPullReq    PackType = 2
	PackType_msgPullAck    PackType = 3
	PackType_msgHistoryReq PackType = 4
	PackType_msgHistoryAck PackType = 5
	PackType_msgReq        PackType = 6
	PackType_msgAck        PackType = 7
)

// Enum value maps for PackType.
var (
	PackType_name = map[int32]string{
		0: "loginReq",
		1: "loginAck",
		2: "msgPullReq",
		3: "msgPullAck",
		4: "msgHistoryReq",
		5: "msgHistoryAck",
		6: "msgReq",
		7: "msgAck",
	}
	PackType_value = map[string]int32{
		"loginReq":      0,
		"loginAck":      1,
		"msgPullReq":    2,
		"msgPullAck":    3,
		"msgHistoryReq": 4,
		"msgHistoryAck": 5,
		"msgReq":        6,
		"msgAck":        7,
	}
)

func (x PackType) Enum() *PackType {
	p := new(PackType)
	*p = x
	return p
}

func (x PackType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PackType) Descriptor() protoreflect.EnumDescriptor {
	return file_him_proto_enumTypes[1].Descriptor()
}

func (PackType) Type() protoreflect.EnumType {
	return &file_him_proto_enumTypes[1]
}

func (x PackType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PackType.Descriptor instead.
func (PackType) EnumDescriptor() ([]byte, []int) {
	return file_him_proto_rawDescGZIP(), []int{1}
}

//会话类型
type SessionType int32

const (
	SessionType_c2c   SessionType = 0
	SessionType_group SessionType = 1
)

// Enum value maps for SessionType.
var (
	SessionType_name = map[int32]string{
		0: "c2c",
		1: "group",
	}
	SessionType_value = map[string]int32{
		"c2c":   0,
		"group": 1,
	}
)

func (x SessionType) Enum() *SessionType {
	p := new(SessionType)
	*p = x
	return p
}

func (x SessionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SessionType) Descriptor() protoreflect.EnumDescriptor {
	return file_him_proto_enumTypes[2].Descriptor()
}

func (SessionType) Type() protoreflect.EnumType {
	return &file_him_proto_enumTypes[2]
}

func (x SessionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SessionType.Descriptor instead.
func (SessionType) EnumDescriptor() ([]byte, []int) {
	return file_him_proto_rawDescGZIP(), []int{2}
}

//消息类型
type ElemType int32

const (
	ElemType_custom ElemType = 0
	ElemType_text   ElemType = 1
	ElemType_image  ElemType = 2
)

// Enum value maps for ElemType.
var (
	ElemType_name = map[int32]string{
		0: "custom",
		1: "text",
		2: "image",
	}
	ElemType_value = map[string]int32{
		"custom": 0,
		"text":   1,
		"image":  2,
	}
)

func (x ElemType) Enum() *ElemType {
	p := new(ElemType)
	*p = x
	return p
}

func (x ElemType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ElemType) Descriptor() protoreflect.EnumDescriptor {
	return file_him_proto_enumTypes[3].Descriptor()
}

func (ElemType) Type() protoreflect.EnumType {
	return &file_him_proto_enumTypes[3]
}

func (x ElemType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ElemType.Descriptor instead.
func (ElemType) EnumDescriptor() ([]byte, []int) {
	return file_him_proto_rawDescGZIP(), []int{3}
}

//消息最上层
type Pack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type PackType `protobuf:"varint,1,opt,name=type,proto3,enum=pb.PackType" json:"type,omitempty"`
	Body []byte   `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *Pack) Reset() {
	*x = Pack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_him_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pack) ProtoMessage() {}

func (x *Pack) ProtoReflect() protoreflect.Message {
	mi := &file_him_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pack.ProtoReflect.Descriptor instead.
func (*Pack) Descriptor() ([]byte, []int) {
	return file_him_proto_rawDescGZIP(), []int{0}
}

func (x *Pack) GetType() PackType {
	if x != nil {
		return x.Type
	}
	return PackType_loginReq
}

func (x *Pack) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

//设备登录
type LoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token    string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	DeviceId string `protobuf:"bytes,2,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
}

func (x *LoginReq) Reset() {
	*x = LoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_him_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReq) ProtoMessage() {}

func (x *LoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_him_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReq.ProtoReflect.Descriptor instead.
func (*LoginReq) Descriptor() ([]byte, []int) {
	return file_him_proto_rawDescGZIP(), []int{1}
}

func (x *LoginReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *LoginReq) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

//登录回执
type LoginAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	UserId string `protobuf:"bytes,3,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *LoginAck) Reset() {
	*x = LoginAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_him_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginAck) ProtoMessage() {}

func (x *LoginAck) ProtoReflect() protoreflect.Message {
	mi := &file_him_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginAck.ProtoReflect.Descriptor instead.
func (*LoginAck) Descriptor() ([]byte, []int) {
	return file_him_proto_rawDescGZIP(), []int{2}
}

func (x *LoginAck) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *LoginAck) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *LoginAck) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//会话类型
	SessionType SessionType `protobuf:"varint,13,opt,name=sessionType,proto3,enum=pb.SessionType" json:"sessionType,omitempty"`
	//消息类型
	Type ElemType `protobuf:"varint,1,opt,name=type,proto3,enum=pb.ElemType" json:"type,omitempty"`
	//会话id
	SessionId string `protobuf:"bytes,2,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	//app端消息id
	MsgID string `protobuf:"bytes,3,opt,name=msgID,proto3" json:"msgID,omitempty"`
	//全局唯一id
	MsgUid string `protobuf:"bytes,4,opt,name=msgUid,proto3" json:"msgUid,omitempty"`
	//消息状态
	Status MessageStatus `protobuf:"varint,5,opt,name=status,proto3,enum=pb.MessageStatus" json:"status,omitempty"`
	//消息发送者
	SenderId string `protobuf:"bytes,6,opt,name=senderId,proto3" json:"senderId,omitempty"`
	//消息发送者昵称
	NickName string `protobuf:"bytes,7,opt,name=nickName,proto3" json:"nickName,omitempty"`
	//消息发送者头像
	FaceURL string `protobuf:"bytes,8,opt,name=faceURL,proto3" json:"faceURL,omitempty"`
	//消息内容
	Content string `protobuf:"bytes,9,opt,name=content,proto3" json:"content,omitempty"`
	//消息发送时间
	Timestamp int64 `protobuf:"varint,10,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	//消息自定义数据
	CloudCustomData []byte `protobuf:"bytes,11,opt,name=cloudCustomData,proto3" json:"cloudCustomData,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_him_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_him_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_him_proto_rawDescGZIP(), []int{3}
}

func (x *Message) GetSessionType() SessionType {
	if x != nil {
		return x.SessionType
	}
	return SessionType_c2c
}

func (x *Message) GetType() ElemType {
	if x != nil {
		return x.Type
	}
	return ElemType_custom
}

func (x *Message) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *Message) GetMsgID() string {
	if x != nil {
		return x.MsgID
	}
	return ""
}

func (x *Message) GetMsgUid() string {
	if x != nil {
		return x.MsgUid
	}
	return ""
}

func (x *Message) GetStatus() MessageStatus {
	if x != nil {
		return x.Status
	}
	return MessageStatus_init
}

func (x *Message) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *Message) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *Message) GetFaceURL() string {
	if x != nil {
		return x.FaceURL
	}
	return ""
}

func (x *Message) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Message) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Message) GetCloudCustomData() []byte {
	if x != nil {
		return x.CloudCustomData
	}
	return nil
}

//消息回执
type MessageAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgId  string `protobuf:"bytes,1,opt,name=msgId,proto3" json:"msgId,omitempty"`
	MsgUid string `protobuf:"bytes,2,opt,name=msgUid,proto3" json:"msgUid,omitempty"`
	//消息成功200，失败，拉黑，不是好友
	Code int32 `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *MessageAck) Reset() {
	*x = MessageAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_him_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageAck) ProtoMessage() {}

func (x *MessageAck) ProtoReflect() protoreflect.Message {
	mi := &file_him_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageAck.ProtoReflect.Descriptor instead.
func (*MessageAck) Descriptor() ([]byte, []int) {
	return file_him_proto_rawDescGZIP(), []int{4}
}

func (x *MessageAck) GetMsgId() string {
	if x != nil {
		return x.MsgId
	}
	return ""
}

func (x *MessageAck) GetMsgUid() string {
	if x != nil {
		return x.MsgUid
	}
	return ""
}

func (x *MessageAck) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

//离线消息拉取
type MessagePullReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Timestamp int64  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *MessagePullReq) Reset() {
	*x = MessagePullReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_him_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagePullReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagePullReq) ProtoMessage() {}

func (x *MessagePullReq) ProtoReflect() protoreflect.Message {
	mi := &file_him_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagePullReq.ProtoReflect.Descriptor instead.
func (*MessagePullReq) Descriptor() ([]byte, []int) {
	return file_him_proto_rawDescGZIP(), []int{5}
}

func (x *MessagePullReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MessagePullReq) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

//离线消息拉取响应
type MessagePullAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msglist []*Message `protobuf:"bytes,1,rep,name=msglist,proto3" json:"msglist,omitempty"`
	//剩余消息条数
	NLeft int64 `protobuf:"varint,2,opt,name=nLeft,proto3" json:"nLeft,omitempty"`
}

func (x *MessagePullAck) Reset() {
	*x = MessagePullAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_him_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessagePullAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessagePullAck) ProtoMessage() {}

func (x *MessagePullAck) ProtoReflect() protoreflect.Message {
	mi := &file_him_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessagePullAck.ProtoReflect.Descriptor instead.
func (*MessagePullAck) Descriptor() ([]byte, []int) {
	return file_him_proto_rawDescGZIP(), []int{6}
}

func (x *MessagePullAck) GetMsglist() []*Message {
	if x != nil {
		return x.Msglist
	}
	return nil
}

func (x *MessagePullAck) GetNLeft() int64 {
	if x != nil {
		return x.NLeft
	}
	return 0
}

//历史消息响应
type MsgHistoryAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msglist []*Message `protobuf:"bytes,1,rep,name=msglist,proto3" json:"msglist,omitempty"`
	//是否还有剩余消息
	IsRemaining bool `protobuf:"varint,2,opt,name=isRemaining,proto3" json:"isRemaining,omitempty"`
}

func (x *MsgHistoryAck) Reset() {
	*x = MsgHistoryAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_him_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgHistoryAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgHistoryAck) ProtoMessage() {}

func (x *MsgHistoryAck) ProtoReflect() protoreflect.Message {
	mi := &file_him_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgHistoryAck.ProtoReflect.Descriptor instead.
func (*MsgHistoryAck) Descriptor() ([]byte, []int) {
	return file_him_proto_rawDescGZIP(), []int{7}
}

func (x *MsgHistoryAck) GetMsglist() []*Message {
	if x != nil {
		return x.Msglist
	}
	return nil
}

func (x *MsgHistoryAck) GetIsRemaining() bool {
	if x != nil {
		return x.IsRemaining
	}
	return false
}

//历史消息拉取
type MsgHistoryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	SessionId string `protobuf:"bytes,2,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	Count     int64  `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	Timestamp int64  `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *MsgHistoryReq) Reset() {
	*x = MsgHistoryReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_him_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgHistoryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgHistoryReq) ProtoMessage() {}

func (x *MsgHistoryReq) ProtoReflect() protoreflect.Message {
	mi := &file_him_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgHistoryReq.ProtoReflect.Descriptor instead.
func (*MsgHistoryReq) Descriptor() ([]byte, []int) {
	return file_him_proto_rawDescGZIP(), []int{8}
}

func (x *MsgHistoryReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MsgHistoryReq) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *MsgHistoryReq) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *MsgHistoryReq) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

var File_him_proto protoreflect.FileDescriptor

var file_him_proto_rawDesc = []byte{
	0x0a, 0x09, 0x68, 0x69, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22,
	0x3c, 0x0a, 0x04, 0x50, 0x61, 0x63, 0x6b, 0x12, 0x20, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x3c, 0x0a,
	0x08, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x48, 0x0a, 0x08, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x41, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x89, 0x03, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x31, 0x0a, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6c, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x73,
	0x67, 0x55, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x73, 0x67, 0x55,
	0x69, 0x64, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x61, 0x63, 0x65, 0x55, 0x52, 0x4c, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x61, 0x74,
	0x61, 0x22, 0x4e, 0x0a, 0x0a, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x63, 0x6b, 0x12,
	0x14, 0x0a, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x73, 0x67, 0x55, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x73, 0x67, 0x55, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x22, 0x46, 0x0a, 0x0e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x75, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x4d, 0x0a, 0x0e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x50, 0x75, 0x6c, 0x6c, 0x41, 0x63, 0x6b, 0x12, 0x25, 0x0a, 0x07, 0x6d,
	0x73, 0x67, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70,
	0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x4c, 0x65, 0x66, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x6e, 0x4c, 0x65, 0x66, 0x74, 0x22, 0x58, 0x0a, 0x0d, 0x4d, 0x73, 0x67, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x41, 0x63, 0x6b, 0x12, 0x25, 0x0a, 0x07, 0x6d, 0x73, 0x67,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x22, 0x79, 0x0a, 0x0d, 0x4d, 0x73, 0x67, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2a, 0x77, 0x0a,
	0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x08,
	0x0a, 0x04, 0x69, 0x6e, 0x69, 0x74, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x73, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x53, 0x75, 0x63,
	0x63, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x46, 0x61, 0x69, 0x6c, 0x10,
	0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x68, 0x61, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x10,
	0x04, 0x12, 0x11, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x52, 0x65, 0x76,
	0x6f, 0x6b, 0x65, 0x64, 0x10, 0x06, 0x2a, 0x84, 0x01, 0x0a, 0x08, 0x50, 0x61, 0x63, 0x6b, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x10,
	0x00, 0x12, 0x0c, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x63, 0x6b, 0x10, 0x01, 0x12,
	0x0e, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x50, 0x75, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x10, 0x02, 0x12,
	0x0e, 0x0a, 0x0a, 0x6d, 0x73, 0x67, 0x50, 0x75, 0x6c, 0x6c, 0x41, 0x63, 0x6b, 0x10, 0x03, 0x12,
	0x11, 0x0a, 0x0d, 0x6d, 0x73, 0x67, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x6d, 0x73, 0x67, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x41, 0x63, 0x6b, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x6d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x10,
	0x06, 0x12, 0x0a, 0x0a, 0x06, 0x6d, 0x73, 0x67, 0x41, 0x63, 0x6b, 0x10, 0x07, 0x2a, 0x21, 0x0a,
	0x0b, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03,
	0x63, 0x32, 0x63, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x10, 0x01,
	0x2a, 0x2b, 0x0a, 0x08, 0x45, 0x6c, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x10, 0x02, 0x42, 0x06, 0x5a,
	0x04, 0x2f, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_him_proto_rawDescOnce sync.Once
	file_him_proto_rawDescData = file_him_proto_rawDesc
)

func file_him_proto_rawDescGZIP() []byte {
	file_him_proto_rawDescOnce.Do(func() {
		file_him_proto_rawDescData = protoimpl.X.CompressGZIP(file_him_proto_rawDescData)
	})
	return file_him_proto_rawDescData
}

var file_him_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_him_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_him_proto_goTypes = []interface{}{
	(MessageStatus)(0),     // 0: pb.MessageStatus
	(PackType)(0),          // 1: pb.PackType
	(SessionType)(0),       // 2: pb.SessionType
	(ElemType)(0),          // 3: pb.ElemType
	(*Pack)(nil),           // 4: pb.Pack
	(*LoginReq)(nil),       // 5: pb.LoginReq
	(*LoginAck)(nil),       // 6: pb.LoginAck
	(*Message)(nil),        // 7: pb.Message
	(*MessageAck)(nil),     // 8: pb.MessageAck
	(*MessagePullReq)(nil), // 9: pb.MessagePullReq
	(*MessagePullAck)(nil), // 10: pb.MessagePullAck
	(*MsgHistoryAck)(nil),  // 11: pb.MsgHistoryAck
	(*MsgHistoryReq)(nil),  // 12: pb.MsgHistoryReq
}
var file_him_proto_depIdxs = []int32{
	1, // 0: pb.Pack.type:type_name -> pb.PackType
	2, // 1: pb.Message.sessionType:type_name -> pb.SessionType
	3, // 2: pb.Message.type:type_name -> pb.ElemType
	0, // 3: pb.Message.status:type_name -> pb.MessageStatus
	7, // 4: pb.MessagePullAck.msglist:type_name -> pb.Message
	7, // 5: pb.MsgHistoryAck.msglist:type_name -> pb.Message
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_him_proto_init() }
func file_him_proto_init() {
	if File_him_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_him_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_him_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_him_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_him_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_him_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_him_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagePullReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_him_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessagePullAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_him_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgHistoryAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_him_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgHistoryReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_him_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_him_proto_goTypes,
		DependencyIndexes: file_him_proto_depIdxs,
		EnumInfos:         file_him_proto_enumTypes,
		MessageInfos:      file_him_proto_msgTypes,
	}.Build()
	File_him_proto = out.File
	file_him_proto_rawDesc = nil
	file_him_proto_goTypes = nil
	file_him_proto_depIdxs = nil
}
