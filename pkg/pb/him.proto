syntax = "proto3";

package pb;
option go_package = "/;pb";
//消息状态
enum MessageStatus {
	init = 0;
	sending = 1;
	sendSucc = 2;
	sendFail = 3;
	hasDeleted = 4;
	localImported = 5;
	localRevoked = 6;
}

enum PackType{
	loginReq = 0;
	loginAck = 1;
	//消息同步当做心跳，可以避免在线情况下因为网络等原因消息未送达，不用等用户下次登录就可以重新推送消息
	msgPullReq = 2;
	msgPullAck = 3;
	msgHistoryReq = 4;
	msgHistoryAck = 5;
	msgReq = 6;
	msgAck = 7;
}
//会话类型
enum SessionType{
	c2c = 0;
	group = 1;
}
//消息类型
enum ElemType{
	custom = 0;
	text = 1;
	image = 2;
}
//消息最上层
message Pack {
    PackType type = 1;
    bytes body = 2;
}
//设备登录
message LoginReq{
	string token = 1;
	string deviceId = 2; 
}
//登录回执
message LoginAck{
	int32 code = 1;
	string msg = 2;
	string userId = 3;
}

message Message{
	//会话类型
	SessionType sessionType = 13;
	//消息类型
	ElemType type = 1;
	//会话id
	string sessionId = 2;
	//app端消息id
	string msgID = 3;
	//全局唯一id
	string msgUid = 4;
	//消息状态
	MessageStatus status = 5;
	//消息发送者
	string senderId = 6;
	//消息发送者昵称
	string nickName = 7;
	//消息发送者头像
	string faceURL = 8;
	//消息内容
	string content = 9;
	//消息发送时间
	int64 timestamp = 10;
	//消息自定义数据
	bytes cloudCustomData = 11;
}
//消息回执
message MessageAck{
	string 	msgId = 1;
	string 	msgUid = 2;
	//消息成功200，失败，拉黑，不是好友
	int32	code =3;
}

//离线消息拉取
message MessagePullReq{
	string  userId = 1;
	int64 	timestamp = 2;
}

//离线消息拉取响应
message MessagePullAck{
	repeated Message msglist = 1;
	//剩余消息条数
	int64 	nLeft = 2;
}
//历史消息响应
message MsgHistoryAck{
	repeated Message msglist = 1;
	//是否还有剩余消息
	bool 	isRemaining = 2;
}
//历史消息拉取
message MsgHistoryReq{
	string  userId = 1;
	string  sessionId = 2;
	int64   count = 3;
	int64   timestamp = 4;
}

